if [ -n "$__CURRENT_GIT_BRANCH" ]; then
    local s
    if [ -n "$__CURRENT_GIT_SUBMODULE" ]; then
        s+="%{${fg[red]}%}"
    fi
    s+="$__CURRENT_GIT_NAME"
        s+="%{${fg[cyan]}%}|"
    if [ -n "$__CURRENT_GIT_BRANCH_DETACHED" ]; then
        s+="%{${fg[magenta]}%}"
    else
        s+="%{${fg[blue]}%}"
    fi
    s+="$__CURRENT_GIT_BRANCH"

    s+="%{${fg[cyan]}%}|%{${fg[yellow]}%}"

    print_separator=
    case "$__CURRENT_GIT_BRANCH_OPERATION" in
        reverting)
            s+="%{${fg[red]}%}reverting"
            print_separator=y
        ;;
        rebasing)
            s+="%{${fg[red]}%}rebasing"
            print_separator=y
        ;;
        merging)
            s+="%{${fg[red]}%}merging"
            print_separator=y
        ;;
        cherrypicking)
            s+="%{${fg[red]}%}cherry-picking"
            print_separator=y
        ;;
    esac

    if [ -n "$print_separator" ]; then
        s+="%{${fg[cyan]}%}|%{${fg[yellow]}%}"
    fi

    case "$__CURRENT_GIT_BRANCH_STATUS" in
        ahead)
        s+=""
        ;;
        diverged)
        s+=""
        ;;
        behind)
        s+=""
        ;;
        up-to-date)
        s+=""
        ;;
        *)
        s+=""
    esac

    if [ -n "$__CURRENT_GIT_BRANCH_ADDED_FILES" ]; then
        s+="◀"
    fi
    if [ -n "$__CURRENT_GIT_BRANCH_IS_DIRTY" ]; then
        s+=""
    fi
    if [ -n "$__CURRENT_GIT_BRANCH_UNMERGED_FILES" ]; then
        s+=""
    fi
    if [ -n "$__CURRENT_GIT_BRANCH_UNTRACKED_FILES" ]; then
        s+="?"
    fi

    printf "%s%s%s" "%{${fg[cyan]}%}─[%{${fg[green]}%}" $s "%{${fg[cyan]}%}]"
fi
