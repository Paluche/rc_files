# My .zshrc by Hubert Lefevre
# Some part by Matt Blissey http://matt.blissett.me.uk/linux/zsh/zshrc
# Git prompt by Sebastian Celis (sebastiancelis.com)
# Some from Alexis Polti

# Use hard limits, except for a smaller stack and no core dumps
unlimit
limit stack 8192
limit core 0
limit -s

# Color table
##############################################################################
# Font color
# 16 color terminals
fg_black=%F{000}
fg_red=%F{001}
fg_green=%F{002}
fg_lbrown=%F{003}
fg_blue=%F{004}
fg_dbrown=%F{005}
fg_lblue=%F{006}
fg_lgray=%F{007}
fg_gray=%F{008}
fg_lred=%F{009}
fg_lgreen=%F{010}
fg_yellow=%F{011}
fg_dblue=%F{012}
fg_lbrown=%F{013}
fg_llblue=%F{014}
fg_white=%F{015}
fg_black2=%F{016}
# 256 color bonus
fg_orange=%F{208}
fg_purple=%F{164}
fg_pink=%F{212}
fg_2gray=%F{248}

# Attributes
at_normal=%{$'\e[0m'%}
at_bold=%{$'\e[1m'%}
at_italics=%{$'\e[3m'%}
at_underl=%{$'\e[4m'%}
at_blink=%{$'\e[5m'%}
at_outline=%{$'\e[6m'%}
at_reverse=%{$'\e[7m'%}
at_nondisp=%{$'\e[8m'%}
at_strike=%{$'\e[9m'%}
at_boldoff=%{$'\e[22m'%}
at_italicsoff=%{$'\e[23m'%}
at_underloff=%{$'\e[24m'%}
at_blinkoff=%{$'\e[25m'%}
at_reverseoff=%{$'\e[27m'%}
at_strikeoff=%{$'\e[29m'%}

# ls colors
autoload colors; colors;
export LSCOLORS="Gxfxcxdxbxegedabagacad"

# Enable ls colors
if [ "$DISABLE_LS_COLORS" != "true" ]
then
  # Find the option for using colors in ls, depending on the version: Linux or BSD
  if [[ "$(uname -s)" == "NetBSD" ]]; then
    # On NetBSD, test if "gls" (GNU ls) is installed (this one supports colors);
    # otherwise, leave ls as is, because NetBSD's ls doesn't support -G
    gls --color -d . &>/dev/null 2>&1 && alias ls='gls --color=tty'
  elif [[ "$(uname -s)" == "OpenBSD" ]]; then
    # On OpenBSD, test if "colorls" is installed (this one supports colors);
    # otherwise, leave ls as is, because OpenBSD's ls doesn't support -G
    colorls -G -d . &>/dev/null 2>&1 && alias ls='colorls -G'
  else
    ls --color -d . &>/dev/null 2>&1 && alias ls='ls --color=tty' || alias ls='ls -G'
  fi
fi

# Completion
##############################################################################
autoload -U compinit
compinit
# case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# for cd, don't try username completions (~polti)
zstyle ':completion:*:cd:*' tag-order local-directories path-directories

# Completion in rm, mv, cp
zstyle ':completion:*:rm:*' ignore-line yes
zstyle ':completion:*:mv:*' ignore-line yes
zstyle ':completion:*:cp:*' ignore-line yes
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

# Completion selection by menu for kill
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
# Menu select
zstyle ':completion:*' menu select

# SSH Completion
zstyle ':completion:*' users $users
zstyle ':completion:*:hosts' hosts $hosts

# Aliases
##############################################################################
alias ssh='ssh -X'              # Automatix graphic interface with ssh
alias m='more'
alias more=less
alias l="ls -AFhl -g"
alias ll='ls -lh'
alias lll='ls -lh | less'
alias grep='grep --colour -rni'
alias ms='ls'
alias la='ls -a'
alias sl='ls'
alias rm='nocorrect rm -r'         # Recursive remove automatic
alias mv='nocorrect mv -i'         # no spelling correction on mv
alias make='nocorrect make'        # no spelling correction on make
alias locate='nocorrect locate -i' # no spelling correction on locate
alias find='nocorrect find -name'
alias mkdir='nocorrect mkdir -p'   # no spelling correction on mkdir
alias cp='cp -r -i'
alias fuck='clear'
alias lo='libreoffice'
# git
alias gs='git status -s'
alias gd='git diff'
alias ga='git add'
alias gap='git add -p'
alias grp='git reset -p'
alias gc='git commit'
alias gca='git commit -a'
alias gcm='git checkout master'
alias gl='git l'
alias gr='git reset'
alias grh='git reset HEAD'
alias gri='git rebase -i'
alias gph='git push'
alias gpl='git pull'
alias gsd='git svn dcommit'
alias gsr='git svn rebase'
alias gsf='git svn fetch'
# Editors on shell
alias pico='nano -mw'
alias nano='nano -mw'
# Auto launch
alias -s html='firefox'
alias -s c='vim'
alias -s h='vim'
alias -s o='vim'
alias -s md='vim'
alias -s cpp='vim'
alias -s vim='vim'
alias -s mk='vim'
alias -s txt='vim'
alias -s md='vim'
alias -s mkd='vim'
alias -s markdown='vim'
alias -s lua='vim'
alias -s tex='vim'
alias -s java='vim'
alias -s xml='vim'
alias -s iadl='vim'
alias -s mkv='vlc'
alias -s sv='emacs'
alias -s v='emacs'
alias -s pdf='evince'
alias -s odt='lowriter'
alias -s odp='loimpress'
alias -s ods='localc'
alias -s xls='localc'
alias -s py='python'
alias -s sh='bash'
alias Makefile='vim Makefile'
#alias test='cd ./test' # Because I have currently a folder called test and I don't need the useless function test
# Other
alias today='cat /usr/share/calendar/* | grep `date +"%m/%d"`'
alias enst='ssh -X hlefevre@ssh.enst.fr'
alias a406='ssh -X hlefevre@a406-04.enst.fr'
alias apt-get='sudo apt-get'
alias aptitude='sudo aptitude'
alias j='jobs'
# color
alias diff='colordiff'
# Global aliases (expand whatever their position)
# e.g. find . E L
alias -g G='| grep'
alias -g L='| less'
alias -g H='| head'
alias -g S='| sort'
alias -g T='| tail'
# lock screen using xscreensaver
alias lock='xscreensaver-command -lock'

# Set Options
##############################################################################
# keep quiet
unsetopt beep
unsetopt hist_beep
unsetopt list_beep

#setopt correct
setopt autocd                      # Typing cd everytime is boring
setopt auto_pushd pushd_minus      # don't use cd, use pushd
setopt pushd_silent pushd_to_home
setopt pushd_ignore_dups
setopt prompt_subst                # allow function for prompt
setopt rm_star_wait                # Don't do anything stupid Like delete all
setopt chase_links                 # converts links to real path
setopt noclobber                   # don't allow > to clobber files
setopt complete_aliases
setopt extended_glob
setopt no_flow_control
setopt list_types
setopt mark_dirs
setopt path_dirs
setopt auto_remove_slash
setopt prompt_percent
setopt prompt_subst
setopt rm_star_wait                # rm * waits 10 seconds
setopt multios                     # allow multiple redirection echo 'a'>b>c
setopt bang_hist                   # allow ! for accessing history
setopt nohup                       # don't hup running jobs on logout.
unsetopt share_history             # Share history between multiple shells
setopt hist_ignore_dups            # If I type cd and then cd again, only save the last one
setopt hist_ignore_all_dups        # Even if there are commands inbetween commands that are the same, still only save the last one
setopt hist_ignore_space           # If a line starts with a space, don't save it.
setopt hist_no_store
#setopt EXTENDED_HISTORY           # Save the time and how long a command ran
setopt hist_save_no_dups
setopt hist_expire_dups_first
setopt hist_find_no_dups

# Bind Key
##############################################################################
# Emacs key
bindkey -e
# Input control
bindkey '^[[1;5D' backward-word    # Ctrl + LEFT
bindkey '^[[1;5C' forward-word     # Ctrl + RIGHT
bindkey '\e[1~' beginning-of-line  # Debut
bindkey '\e[4~' end-of-line        # fin

# Prompt
##############################################################################
# Autoload zsh functions.
fpath=(~/.zsh/functions $fpath)
autoload -U ~/.zsh/functions/*(:t)
autoload -U promptinit

# Need git in english
export LANGUAGE='en_US.UTF-8 git'

# Enable auto-execution of functions.
typeset -ga preexec_functions
typeset -ga precmd_functions
typeset -ga chpwd_functions

# Append git functions needed for prompt.
preexec_functions+='preexec_update_git_vars'
precmd_functions+='precmd_update_git_vars'
chpwd_functions+='chpwd_update_git_vars'

# Append battery functions needed for prompt
preexec_functions+='preexec_update_battery_vars'
precmd_functions+='precmd_update_battery_vars'
chpwd_functions+='chpwd_update_battery_vars'

# prompt
export PROMPT='${fg_gray}┌─[${fg_green}%n${fg_gray}@${fg_blue}%m${fg_gray}]─[${fg_lgray}%T${fg_gray}]%(1j.─[${fg[cyan]}%j${fg_gray}].)${at_bold}$(prompt_battery_info)$(prompt_git_info)${at_normal}
${fg_gray}└%(?:%{$fg[green]%}➜ :%{$fg[red]%}➜ %s)${at_normal}'
export RPROMPT="${at_bold}${fg_orange}%~/ ${at_normal}"


# Historic
##############################################################################
export HISTSIZE=2000
export HISTFILE="$HOME/.history"
export SAVEHIST=$HISTSIZE
#Say how long a command took, if it took more than 30 seconds
export REPORTTIME=30

# Watch other user login/out
watch=notme
export LOGCHECK=60



# Format titles for screen and rxvt
precmd () {print -Pn "\e]2;%n@%m%#  %~ %l  %w :: %T\a"}
preexec () {print -Pn "\e]2;%n@%m%#  <$1>  %~ %l  %w :: %T\a"}

# Misc settings
export EDITOR="vim"

# functions
##############################################################################
# extract the files
extract()
{
    if [[ -z "$1" ]]; then
        print -P "usage: \e[1;36mextract\e[1;0m < filename >"
        print -P "       Extract the file specified based on the extension"
    elif [[ -f $1 ]]; then
        case ${(L)1} in
            *.tar.bz2)  tar -jxvf $1;;
            *.tar.gz)   tar -zxvf $1;;
            *.bz2)      bunzip2 $1   ;;
            *.gz)       gunzip $1   ;;
            *.jar)      unzip $1       ;;
            *.rar)      unrar x $1   ;;
            *.tar)      tar -xvf $1   ;;
            *.tbz2)     tar -jxvf $1;;
            *.tgz)      tar -zxvf $1;;
            *.zip)      unzip $1      ;;
            *.Z)        uncompress $1;;
            *)          echo "Unable to extract '$1' :: Unknown extension"
        esac
    else
        echo "File ('$1') does not exist!"
    fi
}

# Do a wonderfull job with adb logcat
adb_logcat()
{
    while :
    do
        adb logcat | ~/.adb_logcat.py
    done
}

# Computer's specific configurations
##############################################################################
if [ `hostname` = "paluche-laptop" ]; then
  alias gohubert='cd /media/paluche/OS/Users/Hubert'
  # Lines for compiling and correct usr of openocd
  export PATH=$PATH:/opt/tools_arm/bin/
  export PATH=$PATH:/opt/openocd/bin/
  export PATH=$PATH:/opt/msp430/msp430mcu-20120406/bin/
  export PATH=$PATH:/opt/soclib/utils/bin/
  export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

  alias openocd="sudo /opt/openocd/bin/openocd"

  export LM_LICENSE_FILE=@flexlm.comelec.enst.fr

  # SSH host
  users=(hlefevre paluche hubert bar)
  hosts=(192.168.1.100 192.168.1.101 ssh.enst.fr bar-telecom.kicks-ass.net a406-01.enst.fr a406-10.enst.fr paluche-laptop)

  # Alias for settong VGA options
  alias set_vga_home='xrandr --output VGA1 --mode 1920x1080 --right-of LVDS1 --mode'
  alias set_screen_off='xrandr --output LVDS1 --off'
elif [ `hostname` = "dell-hlefevre" ]; then
  # Netatmo shortcut
  export PATH=$PATH:~/trunk/generic/stm32_sbm
  export PATH=$PATH:/opt/jdk1.7.0_67/bin
  export PATH=$PATH:/opt/jdk1.7.0_67/lib
  # export PATH=$PATH:/opt/jdk1.6.0_45/bin
  # export PATH=$PATH:/opt/jdk1.6.0_45/lib
  # ~/trunk/apps/Linux/flasher
  # App shortcuts
  alias flash-run='stm32_sbm -f app-jtag.bin'
  alias fw-flash-run='stm32_sbm -f app.bin -s 0x1000'
  alias catftdi='cat /dev/ttyUSB0'
  alias serialflasher='sudo ./serialflasher'
  alias flasher='sudo ~/trunk/apps/Linux/flasher/flasher'
  alias dfu_flash='sudo /home/hlefevre/trunk/generic/stm32_dfu/stm32_dfu -f='
  # SSH Users and Host
  users=(hlefevre hubert rest paluche)
  hosts=(ssh.enst.fr devatmo vm1-inte.corp.netatmo.com vm3-inte.corp.netatmo.com)
else
fi
